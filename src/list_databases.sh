# GRCh38
## Genome
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/ $DATABASE_DIR/genome/GRCh38 

## GTF
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/ $DATABASE_DIR/genome/GRCh38 --exclude "*" --include "genes.gtf"

## BED
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/ $DATABASE_DIR/genome/GRCh38 --exclude "*" --include "genes.bed"

## miRNA GTF
wget https://mirbase.org/download/CURRENT/genomes/hsa.gff3 -O $CWD/database/genome/GRCh38/mirbase_mirna.gff3
python src/processing_functions/modify_gff_to_gtf.py --input $CWD/database/genome/GRCh38/mirbase_mirna.gff3 --output $CWD/database/genome/GRCh38/mirbase_mirna.gtf

## miRNA GTF
wget https://mirbase.org/download/CURRENT/mature.fa -O $CWD/database/genome/GRCh38/mature.fa

## miRNA GTF
wget https://mirbase.org/download/CURRENT/hairpin.fa -O $CWD/database/genome/GRCh38/hairpin.fa



## STAR idx
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/STARIndex/ $DATABASE_DIR/index/GRCh38/STAR/

## bowtie idx
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/BowtieIndex/ $DATABASE_DIR/index/GRCh38/BOWTIE/

## bowtie2 idx
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/Bowtie2Index/ $DATABASE_DIR/index/GRCh38/BOWTIE2/

## BWA
aws s3 --no-sign-request --region eu-west-1 sync  s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/BWAIndex/version0.6.0/ $DATABASE_DIR/index/GRCh38/BWA/

## HISAT
wget https://genome-idx.s3.amazonaws.com/hisat/grch38_tran.tar.gz -O $CWD/database/index/GRCh38/HISAT2/grch38_tran.tar.gz --show-progress
tar xvf $CWD/database/index/GRCh38/HISAT2/grch38_tran.tar.gz -C $CWD/database/index/GRCh38/HISAT2
rm $CWD/database/index/GRCh38/HISAT2/grch38_tran.tar.gz

## SALMON
grep '^>' genome.fa | cut -d ' ' -f 1 | cut -d $'\t' -f 1 > decoys.txt
salmon index -t athal.fa.gz --threads $task.cpus -d decoys.txt -i athal_index

## RSEM
rsem-prepare-reference --gtf $gtf --num-threads $task.cpus $fasta rsem/genome






# CHM13
## Genome
cd $DATABASE_DIR/genome
curl -OJX GET "https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/GCF_009914755.1/download?include_annotation_type=GENOME_FASTA&filename=GCF_009914755.1.zip" -H "Accept: application/zip"
# Extract the .fna file!
unzip $DATABASE_DIR/genome/GCF_009914755.1.zip -d $DATABASE_DIR/genome
mv $DATABASE_DIR/genome/ncbi_dataset/data/GCF_009914755.1/GCF_009914755.1_T2T-CHM13v2.0_genomic.fna $DATABASE_DIR/genome/GCF_009914755.1_T2T-CHM13v2.0_genomic.fna
rm -r $DATABASE_DIR/genome/ncbi_dataset $DATABASE_DIR/genome/GCF_009914755.1.zip

## Bowtie2
mkdir -p $DATABASE_DIR/genome/index/bowtie2-chm13
bowtie2-build -f $DATABASE_DIR/genome/GCF_009914755.1_T2T-CHM13v2.0_genomic.fna $DATABASE_DIR/genome/index/bowtie2-chm13/bowtie2-chm13




# GRCm38

## Genome
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Sequence/WholeGenomeFasta/ $DATABASE_DIR/genome/GRCm38 

## GTF
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Annotation/Genes/ $DATABASE_DIR/genome/GRCm38 --exclude "*" --include "genes.gtf"

## BED
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Annotation/Genes/ $DATABASE_DIR/genome/GRCm38 --exclude "*" --include "genes.bed"

## miRNA GTF
wget https://mirbase.org/download/CURRENT/genomes/mmu.gff3 -O $CWD/database/genome/GRCm38/mirbase_mirna.gff3
python src/processing_functions/modify_gff_to_gtf.py --input $CWD/database/genome/GRCm38/mirbase_mirna.gff3 --output $CWD/database/genome/GRCm38/mirbase_mirna.gtf

## miRNA GTF
wget https://mirbase.org/download/CURRENT/mature.fa -O $CWD/database/genome/GRCm38/mature.fa

## miRNA GTF
wget https://mirbase.org/download/CURRENT/hairpin.fa -O $CWD/database/genome/GRCm38/hairpin.fa

## STAR idx
# It has to be generated by default  because of an error. Once run with the first run, it can be uploaded to the index/GRCh38/STAR/ folder.
STAR --runThreadN $NUM_CPUS --runMode genomeGenerate --genomeDir $DATABASE_DIR/index/GRCm38/STAR --genomeFastaFiles $DATABASE_DIR/genome/GRCm38/genome.fa --sjdbGTFfile $DATABASE_DIR/genome/GRCm38/genes.gtf

## bowtie idx
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Sequence/BowtieIndex/ $DATABASE_DIR/index/GRCm38/BOWTIE/


## bowtie2 idx
aws s3 --no-sign-request --region eu-west-1 sync s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Sequence/Bowtie2Index/ $DATABASE_DIR/index/GRCm38/BOWTIE2/

## BWA
aws s3 --no-sign-request --region eu-west-1 sync  s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCm38/Sequence/BWAIndex/version0.6.0/ $DATABASE_DIR/index/GRCm38/BWA/

## HISAT
wget https://genome-idx.s3.amazonaws.com/hisat/grch38_tran.tar.gz -O $CWD/database/index/GRCm38/HISAT2/grch38_tran.tar.gz --show-progress
tar xvf $CWD/database/index/GRCm38/HISAT2/grch38_tran.tar.gz -C $CWD/database/index/GRCm38/HISAT2
rm $CWD/database/index/GRCm38/HISAT2/grch38_tran.tar.gz






# EVs
## KAIJU
mkdir -p $DATABASE_DIR/kaiju
cd $DATABASE_DIR/kaiju
wget -L https://kaiju-idx.s3.eu-central-1.amazonaws.com/2023/kaiju_db_refseq_2023-05-23.tgz -O $DATABASE_DIR/kaiju/kaiju_refseq.tgz
tar xzvf $DATABASE_DIR/kaiju/kaiju_refseq.tgz -C $DATABASE_DIR/kaiju
mv $DATABASE_DIR/kaiju/kaiju_db_refseq.fmi $DATABASE_DIR/kaiju/kaiju_refseq.fmi 

wget -L https://kaiju-idx.s3.eu-central-1.amazonaws.com/2023/kaiju_db_fungi_2023-05-26.tgz -O $DATABASE_DIR/kaiju/kaiju_fungi.tgz
tar xzvf $DATABASE_DIR/kaiju/kaiju_fungi.tgz -C $DATABASE_DIR/kaiju
mv $DATABASE_DIR/kaiju/kaiju_db_fungi.fmi $DATABASE_DIR/kaiju/kaiju_fungi.fmi 

wget -L https://kaiju-idx.s3.eu-central-1.amazonaws.com/2023/kaiju_db_plasmids_2023-05-26.tgz -O $DATABASE_DIR/kaiju/kaiju_plasmids.tgz
tar xzvf $DATABASE_DIR/kaiju/kaiju_plasmids.tgz -C $DATABASE_DIR/kaiju
mv $DATABASE_DIR/kaiju/kaiju_db_plasmids.fmi $DATABASE_DIR/kaiju/kaiju_plasmids.fmi 

## Create human database
ncbi_param_r=10
ncbi-genome-download -F protein-fasta -p $NUM_CPUS -r $ncbi_param_r -P vertebrate_mammalian -t "9606" -R reference

# Change headers of fasta to NCBI taxon ID (9606)
zcat $(find refseq -type f -name '*.faa.gz') | sed 's/^>.*$/>9606/' > combined.faa

kaiju-mkbwt -n $NUM_CPUS -a ACDEFGHIKLMNPQRSTVWY -infilename combined.faa -o kaiju_human
kaiju-mkfmi kaiju_human


## CENTRIFUGE
mkdir -p $DATABASE_DIR/centrifuge
# THIS INDEX WAS TOO BIG BUT WE NEED IT TO MERGE INDEXES
aws s3 cp s3://genome-idx/centrifuge/nt_2018_3_3.tar.gz $DATABASE_DIR/centrifuge/nt_2018_3_3.tar.gz
tar -xvf $DATABASE_DIR/centrifuge/nt_2018_3_3.tar.gz -C $DATABASE_DIR/centrifuge

# We are going to download the human + archaea + bacteria + viral, and create a new index with fungi and protozoa
aws s3 cp s3://genome-idx/centrifuge/p+h+v.tar.gz $DATABASE_DIR/centrifuge/p+h+v.tar.gz
tar -xvf $DATABASE_DIR/centrifuge/p+h+v.tar.gz -C $DATABASE_DIR/centrifuge

cd  $DATABASE_DIR/centrifuge
centrifuge-download -o taxonomy taxonomy
centrifuge-download -o library -P $NUM_CPUS -m -d "fungi,protozoa" -a Any refseq > seqid2taxid.map

cat library/*/*.fna > input-sequences.fna

centrifuge-build -p $NUM_CPUS --conversion-table seqid2taxid.map \
                 --taxonomy-tree taxonomy/nodes.dmp --name-table taxonomy/names.dmp \
                 input-sequences.fna f+p



## KRAKEN2
# Kraken 2  FROM https://benlangmead.github.io/aws-indexes/k2  [HUMAN | ARCHAEA | BACTERIA | VIRAL | PLASMID | PROTOZOA | FUNGI]
mkdir -p $DATABASE_DIR/kraken_2
wget -L https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_20230314.tar.gz -O $DATABASE_DIR/kraken_2/kraken_2_db.tar.gz
wget -L https://genome-idx.s3.amazonaws.com/kraken/pluspf_20230314/inspect.txt -O $DATABASE_DIR/kraken_2/kraken_2_db_inspect.txt
tar xvf $DATABASE_DIR/kraken_2/kraken_2_db.tar.gz -C $DATABASE_DIR/kraken_2



## KRAKENUNIQ
# Krakenuniq https://github.com/fbreitwieser/krakenuniq  [HUMAN | ARCHAEA | BACTERIA | VIRAL | UNIVEC_CORE | FUNGI]
mkdir -p $DATABASE_DIR/krakenuniq
wget -L https://genome-idx.s3.amazonaws.com/kraken/uniq/MicrobialDB_202008/database.kdb -O $DATABASE_DIR/krakenuniq/database.kdb
wget -L https://genome-idx.s3.amazonaws.com/kraken/uniq/MicrobialDB_202008/kuniq_microbialdb.kdb.20200816.tgz -O $DATABASE_DIR/krakenuniq/kuniq_microbialdb.kdb.20200816.tgz
tar xvf $DATABASE_DIR/krakenuniq/kuniq_microbialdb.kdb.20200816.tgz -C $DATABASE_DIR/krakenuniq



## TAXPASTA
# Download .dmp files
mkdir -p $DATABASE_DIR/taxpasta
wget ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz -O $DATABASE_DIR/taxpasta/taxdump.tar.gz

tar xvf $DATABASE_DIR/taxpasta/taxdump.tar.gz -C $DATABASE_DIR/taxpasta/
